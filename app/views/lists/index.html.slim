.card-header.text-center
  h1 #{@board.name} Lists
.card-body
  .row.text-center
    .col-sm-6
      .card.card-default
        .card-header
          h2 General Stats
        .card-body
          b #{@lists.count} Lists <br>
          span #{number_with_precision(@lists.map{|list| list.stats['estimation'].to_i rescue 0}.sum.to_f / (@lists.count.positive? ? @lists.count : 1), precision: 2)} Estimated Hours Per List <br>
          span #{number_with_precision(@lists.map{|list| list.stats['actual'].to_i rescue 0}.sum.to_f / (@lists.count.positive? ? @lists.count : 1), precision: 2)} Actual Hours Per List <br> <br>
          - cards = @lists.map(&:cards).flatten
          b #{cards.count} Cards <br>
          span #{number_with_precision(cards.map{|card| card.stats['estimation'].to_i rescue 0}.sum.to_f / (cards.count.positive? ? cards.count : 1), precision: 2)} Estimated Hours Per Card <br>
          span #{number_with_precision(cards.map{|card| card.stats['actual'].to_i rescue 0}.sum.to_f / (cards.count.positive? ? cards.count : 1), precision: 2)} Actual Hours Per Card <br>
          br
          hr
          b Progression Stats <br>
          span #{@lists.where('name ILIKE ?', 'In Progress').map(&:cards).flatten.count} Cards "In Progress" <br>
          span #{@lists.where('name ILIKE ?', 'Code Review').map(&:cards).flatten.count} Cards In "Code Review" <br>
          span #{@lists.where('name ILIKE ?', 'Completed This Sprint').map(&:cards).flatten.count} Cards "Completed This Sprint"
    .col-sm-6
      .card.card-default
        .card-header
          h2 Lists
        .card-body.text-left
          ol
            - @lists.each do |list|
              li
                = link_to list.name, board_list_cards_path(board_id: @board.id, list_id: list.id)
                br
